#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# Fail fast
set -e

# Debug
# set -x

# Clean up leaking environment
unset GIT_DIR

# Parameters
BUILD_DIR=$1
CACHE_DIR=$2

# Setup profile file
PROFILE_PATH="$BUILD_DIR/.profile.d/geo.sh"
mkdir -p $(dirname $PROFILE_PATH)

# Functions
function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

function manifest_version() {
  curl "http://${S3_BUCKET}.s3.amazonaws.com/manifest.${1}" -s -o - | head -n 1
}

function download_package() {
  name="$1"
  version="$2"
  location="$3"

  mkdir -p $location
  package="https://${S3_BUCKET}.s3.amazonaws.com/$name-$version.tgz"
  curl $package -s -o - | tar xzf - -C $location
}

function set-env (){
  echo "export $1=$2" >> $PROFILE_PATH
}

function set-default-env (){
  echo "export $1=\${$1:-$2}" >> $PROFILE_PATH
}

# Retrieve versions
LIBSPOTIFY_VERSION=12.1.51

# Display some information
echo "Using libspotify version: ${LIBSPOTIFY_VERSION}" | indent

# Vendor directories
VENDORED_LIBSPOTIFY="vendor/libspotify/$LIBSPOTIFY_VERSION"

if [ ! -d $CACHE_DIR/$VENDORED_LIBSPOTIFY ]; then
  echo "-----> Fetching and vendoring geos"
  rm -rf "$CACHE_DIR/vendor/libspotify"
  mkdir -p $CACHE_DIR/$VENDORED_LIBSPOTIFY
  tar -xzf `dirname $0`/../vendor/libspotify-$LIBSPOTIFY_VERSION.tar.gz -C $CACHE_DIR/$VENDORED_LIBSPOTIFY
fi

# Copy artifacts out of cache if exists.
mkdir -p $CACHE_DIR
mkdir -p $BUILD_DIR/$VENDORED_LIBSPOTIFY
cp -r $CACHE_DIR/$VENDORED_LIBSPOTIFY/* $BUILD_DIR/$VENDORED_LIBSPOTIFY &> /dev/null || true

# App directories
APP_SPOTIFY="/app/$VENDORED_LIBSPOTIFY"

# Setup environment variables
set-env SPOTIFY_LIBRARY_PATH "$APP_SPOTIFY/lib"

# Bundle workaround
mkdir -p $BUILD_DIR/.bundle
if [ -f $CACHE_DIR/.bundle/config ]; then
  rm $CACHE_DIR/.bundle/config
fi

# echo "---
# BUNDLE_BUILD__RGEO: --with-geos-dir=$BUILD_DIR/$VENDORED_GEOS --with-geos-lib=$BUILD_DIR/$VENDORED_GEOS/lib --with-proj-dir=$BUILD_DIR/$VENDORED_PROJ --with-proj-lib=$BUILD_DIR/$VENDORED_PROJ/lib
# BUNDLE_FROZEN: '1'
# BUNDLE_PATH: vendor/bundle
# BUNDLE_BIN: vendor/bundle/bin
# BUNDLE_WITHOUT: development:test
# BUNDLE_DISABLE_SHARED_GEMS: '1'
# " > $BUILD_DIR/.bundle/config

set-default-env LIBRARY_PATH "$APP_SPOTIFY/lib"
set-default-env LD_LIBRARY_PATH "$APP_SPOTIFY/lib"
set-default-env CPATH "$APP_SPOTIFY/include"

echo "-----> Vendoring libspotify library done"
